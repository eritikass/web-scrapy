import crawlbase    # base crawl
import re
import scrapy


class ExploitDbSpider(crawlbase.BaseSpider):
    start_urls = ['https://www.exploit-db.com/platform/?order_by=date&order=desc&pg=1&p=php']
    name = 'exploit-db'

    parsed = {}

    def parse(self, response):
        self.parse_page(response)
        for page in response.css('.pagination a'): #:attr("href")').re('.*/platform/.*'):
            txt = page.css('::text').extract_first()
            url = page.css('::attr("href")').extract_first()

            if '>>' in txt or '<<' in txt:
                #print "skip?" + url
                continue


            if url in self.parsed:
                #print "processed?" + url
                continue

            print ">>> " + url
            self.parsed[url] = url
            yield scrapy.Request(response.urljoin(url), self.parse)

    def parse_page(self, response):
        for post in response.css('td.description a'):
            title = post.css('::text').extract_first()
            url = post.css('::attr("href")').extract_first()
            if re.search(r'\bwordpress\b', title, flags=re.IGNORECASE):

                #print title + url

                provider_id = url.strip('/').split('/')[-1]

                if not provider_id.isnumeric():
                    print "error getting provider_id from url"
                    print url
                    exit(1)

                if self.used(provider_id):
                    #print "used"
                    continue

                ep = title.split(' - ')
                exploit = ep.pop()
                mod2 = " ".join(ep).replace('WordPress', '').replace('<', ' <').replace('  ', ' ').strip()

                vp = mod2.split(' ')
                version = vp.pop()

                if version.replace('<', '').replace('=', '').replace('.', '').replace(' ', '').isnumeric():
                    mod2 = " ".join(vp)
                else:
                    version = ''

                self.insert(provider_id=provider_id, link=url, module=mod2, exploit=exploit, version=version)

